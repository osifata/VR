[gd_scene load_steps=18 format=3 uid="uid://c10235u5euaxs"]

[ext_resource type="PackedScene" uid="uid://cll8ppusxmivn" path="res://player.tscn" id="1_m1l3o"]
[ext_resource type="PackedScene" uid="uid://74johdsmm5kl" path="res://models/place.gltf" id="2_i01ik"]
[ext_resource type="Texture2D" uid="uid://da0ocpywk2sql" path="res://models/normal map water.jpg" id="3_vq0gs"]
[ext_resource type="PackedScene" uid="uid://dxp0ukb5ysa0n" path="res://models/vulcao_em_erupcao_-_erupting_volcano.glb" id="4_oj6of"]
[ext_resource type="Shader" path="res://models/clouds.gdshader" id="4_s45xa"]
[ext_resource type="Texture2D" uid="uid://xkrqytufo5tf" path="res://models/c7104516f546eab1e9243bdaae312809.jpg" id="5_8aarf"]
[ext_resource type="PackedScene" uid="uid://bg401b1lem2b5" path="res://models/mount.gltf" id="7_u8rjx"]
[ext_resource type="Script" path="res://panel.gd" id="8_n0nk4"]

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_3ih11"]
lifetime_randomness = 1.0
emission_shape = 3
emission_box_extents = Vector3(5, 100, 5)
inherit_velocity_ratio = 1.0
direction = Vector3(0, 0, 0)
spread = 0.0
gravity = Vector3(0, -10, 0)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_3a6pw"]
albedo_color = Color(1, 0.23, 0.23, 1)

[sub_resource type="PlaneMesh" id="PlaneMesh_vvuw1"]
material = SubResource("StandardMaterial3D_3a6pw")
size = Vector2(0.02, 0.02)
orientation = 2

[sub_resource type="PlaneMesh" id="PlaneMesh_ccs3c"]

[sub_resource type="Shader" id="Shader_0xd8c"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform sampler2D texture_refraction : filter_linear_mipmap, repeat_enable;
uniform float refraction : hint_range(-1.0, 1.0, 0.001);
uniform vec4 refraction_texture_channel;
uniform sampler2D screen_texture : hint_screen_texture, repeat_disable, filter_linear_mipmap;

uniform sampler2D texture_normal : hint_roughness_normal, filter_linear_mipmap, repeat_enable;
uniform float normal_scale : hint_range(-16.0, 16.0);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;

	// Normal Map: Enabled
	NORMAL_MAP = texture(texture_normal, vec2(base_uv.x + TIME * 0.02, base_uv.y)).rgb * texture(texture_normal, vec2(base_uv.x + TIME * -0.02, base_uv.y)).rgb;
	NORMAL_MAP_DEPTH = normal_scale;

	// Refraction: Enabled (with normal map texture)
	vec3 unpacked_normal = NORMAL_MAP;
	unpacked_normal.xy = unpacked_normal.xy * 2.0 - 1.0;
	unpacked_normal.z = sqrt(max(0.0, 1.0 - dot(unpacked_normal.xy, unpacked_normal.xy)));
	vec3 ref_normal = normalize(mix(
			NORMAL,
			TANGENT * unpacked_normal.x + BINORMAL * unpacked_normal.y + NORMAL * unpacked_normal.z,
			NORMAL_MAP_DEPTH));
	vec2 ref_ofs = SCREEN_UV - ref_normal.xy * dot(texture(texture_refraction, base_uv), refraction_texture_channel) * refraction;

	float ref_amount = 1.0 - albedo.a * albedo_tex.a;
	EMISSION += textureLod(screen_texture, ref_ofs, ROUGHNESS * 8.0).rgb * ref_amount * EXPOSURE;
	ALBEDO *= 1.0 - ref_amount;
	// Force transparency on the material (required for refraction).
	ALPHA = 1.0;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_3u1yd"]
render_priority = 0
shader = SubResource("Shader_0xd8c")
shader_parameter/albedo = Color(0.101961, 0.403922, 0.556863, 0.603922)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/refraction = 0.05
shader_parameter/refraction_texture_channel = null
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_scale = Vector3(10, 10, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_refraction = ExtResource("3_vq0gs")
shader_parameter/texture_normal = ExtResource("3_vq0gs")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_n2bfr"]
shader = ExtResource("4_s45xa")
shader_parameter/wind_direction = Vector2(1, 0)
shader_parameter/wind_speed = 1.0
shader_parameter/_density = 0.05
shader_parameter/cloud_coverage = 0.25
shader_parameter/_time_offset = 0.0
shader_parameter/rayleigh = 2.0
shader_parameter/rayleigh_color = Color(0.150324, 0.255236, 0.373709, 1)
shader_parameter/mie = 0.005
shader_parameter/mie_eccentricity = 0.8
shader_parameter/mie_color = Color(0.630024, 0.770016, 0.920006, 1)
shader_parameter/turbidity = 10.0
shader_parameter/sun_disk_scale = 1.0
shader_parameter/ground_color = Color(0.707967, 0.707967, 0.707967, 1)
shader_parameter/exposure = 0.1
shader_parameter/weathermap = ExtResource("5_8aarf")

[sub_resource type="Sky" id="Sky_ppfmo"]
sky_material = SubResource("ShaderMaterial_n2bfr")

[sub_resource type="Environment" id="Environment_n7isx"]
background_mode = 2
sky = SubResource("Sky_ppfmo")
ssr_fade_in = 0.126134
ssao_radius = 4.14
fog_light_energy = 0.49
volumetric_fog_density = 0.107
volumetric_fog_emission_energy = 163.03
volumetric_fog_gi_inject = 2.75

[node name="World" type="Node3D"]

[node name="root" parent="." instance=ExtResource("1_m1l3o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.56339, 1.71369, 1.86441)
wall_min_slide_angle = 0.141372

[node name="DirectionalLight3D2" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.402259, -0.500531, 0.766587, -0.873208, -0.461383, 0.156953, 0.27513, -0.732526, -0.622663, -19.671, 6.96, -31.83)
light_color = Color(0.78664, 0.75816, 0.7233, 1)
shadow_enabled = true

[node name="place" parent="." instance=ExtResource("2_i01ik")]
transform = Transform3D(0.46, 0, 0, 0, 0.46, 0, 0, 0, 0.46, -14.2862, -1.62263, -19.1327)

[node name="GPUParticles3D" type="GPUParticles3D" parent="."]
transform = Transform3D(5.73253, 0, 0, 0, 1.06667, 0, 0, 0, 13.3318, -20.3033, 6.62473, -16.7132)
emitting = false
amount = 100000
lifetime = 10.0
speed_scale = 0.1
randomness = 0.49
fixed_fps = 60
collision_base_size = 0.0
draw_order = 1
process_material = SubResource("ParticleProcessMaterial_3ih11")
draw_pass_1 = SubResource("PlaneMesh_vvuw1")

[node name="WATER" type="MeshInstance3D" parent="."]
transform = Transform3D(300, 0, 0, 0, 1, 0, 0, 0, 300, 0, -1.054, 0)
visible = false
mesh = SubResource("PlaneMesh_ccs3c")
surface_material_override/0 = SubResource("ShaderMaterial_3u1yd")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_n7isx")

[node name="Sketchfab_Scene" parent="." instance=ExtResource("4_oj6of")]
transform = Transform3D(161.957, 0, 2.06359, 0, 161.97, 0, -2.06359, 0, 161.957, -26.2312, 11.6689, -186.259)

[node name="mount" parent="." instance=ExtResource("7_u8rjx")]
transform = Transform3D(27.6078, 0, -41.6871, 0, 50, 0, 41.6871, 0, 27.6078, -87.7186, -1.74464, -192.527)

[node name="mount2" parent="." instance=ExtResource("7_u8rjx")]
transform = Transform3D(-49.9539, 0, -2.14609, 0, 50, 0, 2.14609, 0, -49.9539, 48.6521, -1.74464, -147.796)

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Panel" type="Panel" parent="CanvasLayer"]
offset_right = 98.0
offset_bottom = 40.0
script = ExtResource("8_n0nk4")

[node name="Label" type="Label" parent="CanvasLayer/Panel"]
layout_mode = 0
offset_left = 14.0
offset_top = 6.0
offset_right = 38.0
offset_bottom = 29.0
text = "00."
horizontal_alignment = 2

[node name="Label2" type="Label" parent="CanvasLayer/Panel"]
layout_mode = 0
offset_left = 49.0
offset_top = 6.0
offset_right = 69.0
offset_bottom = 29.0
text = "00"
horizontal_alignment = 2

[node name="невидимые стены" type="CSGBox3D" parent="."]
transform = Transform3D(-7.38624e-07, 0, -0.433507, 0, 5.05473, 0, 16.8977, 0, -1.89492e-08, -0.79392, 0, 0)
visible = false
use_collision = true
